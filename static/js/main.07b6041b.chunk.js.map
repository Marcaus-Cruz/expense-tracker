{"version":3,"sources":["components/UI/SignInForm.js","components/UI/favicon.ico","components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","firebase.js","components/expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["SignInForm","props","useState","enteredUser","setEnteredUser","enteredPass","setEnteredPass","submitHandler","event","preventDefault","inOrUp","target","value","console","log","onSignIn","onSignUp","onSubmit","onChange","className","placeholder","type","onClick","Header","src","logoUrl","alt","style","width","color","lineHeight","padding","username","onSignOut","getTrueMonth","month","ExpenseDate","date","getUTCMonth","day","getUTCDate","year","getFullYear","Card","classes","children","ExpenseItem","removing","onRemoveItem","id","title","amount","ExpensesList","items","length","sort","a","b","map","expense","Filter","selected","onGetYear","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","max","ExpensesChart","chartDataPoints","expenses","getMonth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Expenses","setSelectedYear","currentYearExpenses","filter","toString","isRemoving","selectedYear","itemID","removeExpense","userID","ref","remove","then","catch","error","onRemoveExpense","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","newExpenseData","Date","trim","alert","onStoreExpense","min","step","onCancel","NewExpense","isAdding","setIsAdding","setIsRemoving","newItemID","onIsRemoving","enteredExpense","pushNewExpense","fetch","response","ok","Error","json","responseData","Object","keys","set","name","price","getUTCFullYear","onGetExpense","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","userNumber","setUserNumber","userName","setUserName","setUserPass","useEffect","fetchExpenses","key","loadedExpenses","push","message","fetchUsers","user","pass","pushNewUser","newID","prevExpenses","expenseID","filtered","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b6041b.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SignInForm = (props) => {\r\n\r\n    const [enteredUser, setEnteredUser] = useState(\"\");\r\n    const userChangeHandler = (event) => {\r\n        setEnteredUser(event.target.value);\r\n    };\r\n\r\n    const [enteredPass, setEnteredPass] = useState(\"\");\r\n    const passChangeHandler= (event) => {\r\n        setEnteredPass(event.target.value);\r\n    };\r\n\r\n     const submitHandler = (event) =>{\r\n         event.preventDefault();\r\n\r\n         let inOrUp = event.target.value;\r\n\r\n         //validate here\r\n\r\n         //sign in\r\n          if(inOrUp === \"in\"){\r\n              console.log(\"Signing in\");\r\n              props.onSignIn(enteredUser,enteredPass);\r\n          } \r\n        //  //sign up\r\n          else if (inOrUp === \"up\"){\r\n              console.log(\"Signing up\");\r\n              props.onSignUp(enteredUser, enteredPass);\r\n          } else {\r\n              console.log(\"ERROR SIGNING IN OR UP\");\r\n             return;\r\n          }\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={userChangeHandler}\r\n        value={enteredUser}\r\n        className=\"input\"\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n      />\r\n      <input\r\n        onChange={passChangeHandler}\r\n        value={enteredPass}\r\n        className=\"input\"\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n      />\r\n      <div>\r\n        <button value=\"in\" onClick={submitHandler} type=\"button\" >Login</button>\r\n        <button value=\"up\" onClick={submitHandler} type=\"button\" >Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","export default __webpack_public_path__ + \"static/media/favicon.2f506ebe.ico\";","//import { useState } from \"react\";\r\n\r\nimport SignInForm from \"../UI/SignInForm\";\r\n\r\nimport \"../css/Header.css\";\r\nimport logoUrl from \"../UI/favicon.ico\";\r\n\r\n//Header component for entire page\r\n//possibly move fetching users and signing in/up into this component\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left\">\r\n        <img src={logoUrl} alt=\"MC logo\" style={{ width: \"100px\" }} />\r\n        <h2 style={{ color: \"white\", lineHeight: \"50px\", padding: \"0px 20px\" }}>\r\n          Expense Tracker\r\n        </h2>\r\n      </div>\r\n      {props.username !== \"\" && (\r\n        <div className=\"right\">\r\n          <p>{props.username}</p>{\" \"}\r\n          <button onClick={props.onSignOut}>Sign Out</button>\r\n        </div>\r\n      )}\r\n      {props.username === \"\" && (\r\n        <div className=\"right\">\r\n          <SignInForm onSignIn={props.onSignIn} onSignUp={props.onSignUp} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../css/ExpenseDate.css\";\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props) {\r\n  //Extract date from props\r\n  const month = getTrueMonth(props.date.getUTCMonth());\r\n  const day = props.date.getUTCDate();\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    //return date component\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//My own function because date objects are weird\r\nconst getTrueMonth = (month) => {\r\n    switch (month) {\r\n        case 0:\r\n            month = \"January\";\r\n          break;\r\n        case 1:\r\n            month = \"February\";\r\n          break;\r\n        case 2:\r\n            month = \"March\";\r\n          break;\r\n        case 3:\r\n            month = \"April\";\r\n          break;\r\n        case 4:\r\n            month = \"May\";\r\n          break;\r\n        case 5:\r\n            month = \"June\";\r\n          break;\r\n        case 6:\r\n            month = \"July\";\r\n          break;\r\n        case 7:\r\n            month = \"August\";\r\n          break;\r\n        case 8:\r\n            month = \"September\";\r\n          break;\r\n        case 9:\r\n            month = \"October\";\r\n          break;\r\n        case 10:\r\n            month = \"November\";\r\n          break;\r\n        case 11:\r\n            month = \"December\";\r\n          break;\r\n      }\r\n      return month;\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  \r\n  //call in expenses list which calls to expenses\r\n   const removeItemHandler = () => {\r\n     props.onRemoveItem(props.id);\r\n   };\r\n\r\n  //TODO: onclick for removing\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        {props.removing && <button onClick={removeItemHandler} className=\"removeBtn\">X</button>}\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  //sort expenses in ascending order\r\n  props.items.sort((a, b) => a.date - b.date);\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          id={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          removing={props.removing}\r\n          onRemoveItem={props.onRemoveItem}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import firebase from 'firebase';\r\n//import { initializeApp } from \"firebase/app\";\r\n  \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB7602g76FM5d_ajJm-h8lz_xmST3B0zVM\",\r\n    authDomain: \"exp-track-bdba3.firebaseapp.com\",\r\n    databaseURL: \"https://exp-track-bdba3-default-rtdb.firebaseio.com\",\r\n    projectId: \"exp-track-bdba3\",\r\n    storageBucket: \"exp-track-bdba3.appspot.com\",\r\n    messagingSenderId: \"337970307805\",\r\n    appId: \"1:337970307805:web:4289cd54f487468601b134\"\r\n  };\r\n    \r\nfirebase.initializeApp(firebaseConfig);\r\nvar database = firebase.database();\r\n\r\n  \r\nexport default database;","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\nimport database from '../../firebase';\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  //passed from App, pass to ExpensesList\r\n  const isRemoving = props.removing;\r\n\r\n  const removeItemHandler = (itemID) => {\r\n    console.log(itemID);\r\n    //props.userID\r\n    //do removing here\r\n    const removeExpense = async (userID, itemID) => {\r\n\r\n        database.ref(`expenses/${userID}/${itemID}`).remove().then(() => {\r\n          console.log(\"remove successful\");\r\n        }).catch((error) => {\r\n          console.log(error);\r\n        });\r\n\r\n    }; \r\n\r\n    removeExpense(props.userID, itemID).then(() => {\r\n      props.onRemoveExpense(itemID);\r\n    });\r\n    //add call to props.onRemoveExpense to refresh list\r\n  };\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart expenses={currentYearExpenses} />\r\n      <ExpensesList onRemoveItem={removeItemHandler} removing={isRemoving} items={currentYearExpenses} year={year}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //checks if title is entered. If not, prevent submission.\r\n    if(newExpenseData.title.trim() === ''){\r\n      alert(\"Must enter a title for this expense\");\r\n      return false;\r\n    }\r\n\r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>New Expense</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\nimport database from \"../../firebase\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  let newItemID = null;\r\n\r\n  //database insertion\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    // Push Function\r\n    const pushNewExpense = async (enteredExpense, userID) => {\r\n      let itemID = 0;\r\n\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      // if no items under this user, leave itemID at 0\r\n      if (!responseData[userID]) {\r\n        //do nothing\r\n      } else {\r\n        // 'auto-increment'\r\n        itemID = Math.max(...Object.keys(responseData[userID])) + 1;\r\n      }\r\n\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getUTCMonth(),\r\n          day: enteredExpense.date.getUTCDate(),\r\n          year: enteredExpense.date.getUTCFullYear(),\r\n        })\r\n        .catch(alert);\r\n\r\n      newItemID = itemID;\r\n    }; //endPushNewItem\r\n\r\n    //waits for the push to go through successfully before refreshing list\r\n    pushNewExpense(enteredExpense, props.userID)\r\n      .then(() => {\r\n        setIsAdding(false);\r\n\r\n        const expense = {\r\n          ...enteredExpense,\r\n          id: newItemID,\r\n        };\r\n\r\n        //send to App.js for page refresh\r\n        props.onGetExpense(expense);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setRemoveHandler = () => {\r\n    setIsRemoving(true);\r\n    props.onIsRemoving(true);\r\n  };\r\n\r\n  const stopRemoveHandler = () => {\r\n    setIsRemoving(false);\r\n    props.onIsRemoving(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isAdding && !isRemoving && (\r\n        <div>\r\n          {/* TODO: Add editing capabilities to remove */}\r\n          <button onClick={setRemoveHandler}>Remove Expense</button>{\" \"}\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n        </div>\r\n      )}\r\n      {isAdding && !isRemoving && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isRemoving && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>Which expense would you like to remove?</h3>{\" \"}\r\n          <button onClick={stopRemoveHandler}>Cancel</button>{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nimport database from \"./firebase\";\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  const [userNumber, setUserNumber] = useState();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [userPass, setUserPass] = useState(\"\");\r\n\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  // persistent data upon page refresh\r\n  //\r\n  // var getInitialUser = () => {\r\n  //   var prevUser = localStorage.getItem('prevUser') || \"\";\r\n  //   var prevPass = localStorage.getItem('prevPass') || \"\";\r\n  //   return {\r\n  //     prevUser: prevUser,\r\n  //     prevPass: prevPass\r\n  //   };\r\n  // };\r\n\r\n  // var setUser = (userName, userPass) => {\r\n  //   localStorage.setItem('prevUser',userName);\r\n  //   localStorage.setItem('prevPass', userPass);\r\n  //   setUserName(userName);\r\n  //   setUserPass(userPass);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      setIsLoading(true);\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      const loadedExpenses = [];\r\n\r\n      for (const key in responseData[userNumber]) {\r\n        if (responseData[userNumber][key]) {\r\n          loadedExpenses.push({\r\n            id: key,\r\n            title: responseData[userNumber][key].name,\r\n            amount: responseData[userNumber][key].price,\r\n            date: new Date(\r\n              responseData[userNumber][key].date.year,\r\n              responseData[userNumber][key].date.month,\r\n              responseData[userNumber][key].date.day\r\n            ),\r\n          }); //push\r\n        }\r\n      } //for loop\r\n      setExpenses(loadedExpenses);\r\n      setIsLoading(false);\r\n    }; //fetchExpenses\r\n\r\n    fetchExpenses()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  }, [userNumber, userName]); //useEffect\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const removeExpenseHandler = (expenseID) => {\r\n    setExpenses((prevExpenses) => {\r\n      var filtered = prevExpenses.filter((expense) => {\r\n        return expense.id !== expenseID;\r\n      });\r\n      return [...filtered];\r\n    });\r\n  };\r\n\r\n  const signOutHandler = () => {\r\n    setUserNumber();\r\n    setUserName(\"\");\r\n    setUserPass(\"\");\r\n  };\r\n\r\n  const signInHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user exists\r\n      for (const key in responseData) {\r\n        if (responseData[key] === null) {\r\n          //do nothing - else it will fail to read\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserNumber(key);\r\n            return;\r\n          } //if\r\n        } //endif\r\n      } //end for\r\n\r\n      //user doesn't exist\r\n      alert(\"Invalid log in, please try again\");\r\n      setUserName(\"\");\r\n      setUserPass(\"\");\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  const signUpHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    // Push Function\r\n    const pushNewUser = (enteredUser, enteredPass, newID) => {\r\n      database\r\n        .ref(`users/${newID}`)\r\n        .set({\r\n          user: enteredUser,\r\n          pass: enteredPass,\r\n        })\r\n        .catch(alert);\r\n    }; //endPushNewUser\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user already exists\r\n      for (const key in responseData) {\r\n        if (!responseData[key]) {\r\n          //do nothing\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserName(\"\");\r\n            setUserPass(\"\");\r\n            alert(\"Try signing in, instead.\");\r\n            return;\r\n          } //if\r\n        } //if\r\n      } //for\r\n\r\n      //if user does not exist\r\n      const newID = Math.max(...Object.keys(responseData)) + 1; //auto increment\r\n\r\n      setUserNumber(newID);\r\n\r\n      //push new user\r\n      pushNewUser(enteredUser, enteredPass, newID);\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  //passed from NewExpense, pass to Expenses\r\n  const isRemovingHandler = (removing) => {\r\n    console.log(\"isRemoving = \" + removing);\r\n    //Should be true all of the time\r\n    if (removing) {\r\n      setIsRemoving(true);\r\n    } else {\r\n      setIsRemoving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        username={userName}\r\n        onSignOut={signOutHandler}\r\n        onSignIn={signInHandler}\r\n        onSignUp={signUpHandler}\r\n      />\r\n      {userName !== \"\" && (\r\n        <NewExpense\r\n          onIsRemoving={isRemovingHandler}\r\n          userID={userNumber}\r\n          onGetExpense={addExpenseHandler}\r\n        />\r\n      )}\r\n      <Expenses\r\n        onRemoveExpense={removeExpenseHandler}\r\n        userID={userNumber}\r\n        removing={isRemoving}\r\n        items={expenses}\r\n      />\r\n      {userName === \"\" && (\r\n        <p style={{ color: \"black\", textAlign: \"center\" }}>\r\n          Please sign in to find expenses\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} //app\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}