{"version":3,"sources":["components/UI/SignInForm.js","components/UI/favicon.ico","components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","components/expenses/Expenses.js","components/NewExpense/ExpenseForm.js","firebase.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["SignInForm","props","useState","enteredUser","setEnteredUser","enteredPass","setEnteredPass","submitHandler","event","preventDefault","inOrUp","target","value","console","log","onSignIn","onSignUp","onSubmit","onChange","className","placeholder","type","onClick","Header","src","logoUrl","alt","style","width","color","lineHeight","padding","username","onSignOut","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","removing","title","amount","ExpensesList","items","length","sort","a","b","map","expense","id","Filter","selected","onGetYear","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","setSelectedYear","currentYearExpenses","filter","toString","isRemoving","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","newExpenseData","Date","trim","alert","onStoreExpense","min","step","onCancel","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","NewExpense","isAdding","setIsAdding","setIsRemoving","newItemID","onIsRemoving","enteredExpense","pushNewExpense","userID","itemID","fetch","response","ok","Error","json","undefined","responseData","Object","keys","ref","set","name","price","catch","then","onGetExpense","error","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","userNumber","setUserNumber","userName","setUserName","setUserPass","useEffect","fetchExpenses","key","loadedExpenses","push","message","fetchUsers","user","pass","pushNewUser","newID","prevExpenses","textAlign","ReactDOM","render","document","getElementById"],"mappings":"ydA8DeA,EA5DI,SAACC,GAEhB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAKA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAKOC,EAAgB,SAACC,GACnBA,EAAMC,iBAEN,IAAIC,EAASF,EAAMG,OAAOC,MAKzB,GAAc,OAAXF,EACCG,QAAQC,IAAI,cACZb,EAAMc,SAASZ,EAAYE,OAG1B,IAAe,OAAXK,EAKN,YADCG,QAAQC,IAAI,0BAHZD,QAAQC,IAAI,cACZb,EAAMe,SAASb,EAAaE,KASxC,OACE,uBAAMY,SAAUV,EAAhB,UACE,uBACEW,SApCsB,SAACV,GACvBJ,EAAeI,EAAMG,OAAOC,QAoC5BA,MAAOT,EACPgB,UAAU,QACVC,YAAY,WACZC,KAAK,SAEP,uBACEH,SAtCqB,SAACV,GACtBF,EAAeE,EAAMG,OAAOC,QAsC5BA,MAAOP,EACPc,UAAU,QACVC,YAAY,WACZC,KAAK,aAEP,gCACE,wBAAQT,MAAM,KAAKU,QAASf,EAAec,KAAK,SAAhD,mBACA,wBAAQT,MAAM,KAAKU,QAASf,EAAec,KAAK,SAAhD,6BCxDO,G,MAAA,IAA0B,qCCkC1BE,MAzBf,SAAgBtB,GAEd,OACE,sBAAKkB,UAAU,SAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKK,IAAKC,EAASC,IAAI,UAAUC,MAAO,CAAEC,MAAO,WACjD,oBAAID,MAAO,CAAEE,MAAO,QAASC,WAAY,OAAQC,QAAS,YAA1D,gCAIkB,KAAnB9B,EAAM+B,UACL,sBAAKb,UAAU,QAAf,UACE,4BAAIlB,EAAM+B,WAAc,IACxB,wBAAQV,QAASrB,EAAMgC,UAAvB,yBAGgB,KAAnBhC,EAAM+B,UACL,qBAAKb,UAAU,QAAf,SACE,cAAC,EAAD,CAAYJ,SAAUd,EAAMc,SAAUC,SAAUf,EAAMe,iB,kBCNjDkB,MAlBf,SAAqBjC,GAGjB,IAAMkC,EAAQlC,EAAMmC,KAAKC,eAAe,QAAS,CAACF,MAAO,SACnDG,EAAMrC,EAAMmC,KAAKC,eAAe,QAAS,CAACC,IAAK,YAC/CC,EAAOtC,EAAMmC,KAAKI,cAExB,OAGA,cADA,CACA,OAAKrB,UAAU,eAAf,UACM,qBAAKA,UAAU,sBAAf,SAAsCgB,IACtC,qBAAKhB,UAAU,qBAAf,SAAqCoB,IACrC,qBAAKpB,UAAU,oBAAf,SAAoCmB,QCT/BG,MALf,SAAcxC,GACV,IAAMyC,EAAU,QAAUzC,EAAMkB,UAChC,OAAO,qBAAKA,UAAWuB,EAAhB,SAA0BzC,EAAM0C,YCqB5BC,MAlBf,SAAqB3C,GAInB,OACE,6BACE,eAAC,EAAD,CAAMkB,UAAU,eAAhB,UACGlB,EAAM4C,UAAY,wBAAQ1B,UAAU,YAAlB,eACnB,cAAC,EAAD,CAAaiB,KAAMnC,EAAMmC,OACzB,sBAAKjB,UAAU,4BAAf,UACE,6BAAKlB,EAAM6C,QACX,sBAAK3B,UAAU,sBAAf,cAAuClB,EAAM8C,mBCcxCC,G,MA7BM,SAAC/C,GACpB,OAA2B,IAAvBA,EAAMgD,MAAMC,OAEZ,qBAAI/B,UAAU,0BAAd,mCACyBlB,EAAMsC,SAMnCtC,EAAMgD,MAAME,MAAK,SAACC,EAAEC,GAAH,OACfD,EAAEhB,KAAOiB,EAAEjB,QAIX,oBAAIjB,UAAU,gBAAd,SACGlB,EAAMgD,MAAMK,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CACEV,SAAU5C,EAAM4C,SAEhBC,MAAOS,EAAQT,MACfC,OAAQQ,EAAQR,OAChBX,KAAMmB,EAAQnB,MAHTmB,EAAQC,YCQRC,G,MA3BA,SAACxD,GAKd,OACE,qBAAKkB,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQP,MAAOX,EAAMyD,SAAUxC,SARf,SAACV,GACrBP,EAAM0D,UAAUnD,EAAMG,OAAOC,QAOzB,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,QCDKgD,G,YApBE,SAAC3D,GAChB,IAAI4D,EAAgB,KAMpB,OAJI5D,EAAM6D,SAAW,IACnBD,EAAgBE,KAAKC,MAAO/D,EAAMW,MAAQX,EAAM6D,SAAY,KAAO,KAInE,sBAAK3C,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVQ,MAAO,CAAEsC,OAAQJ,OAGrB,qBAAK1C,UAAU,mBAAf,SAAmClB,EAAMiE,aCMhCC,EApBD,SAAClE,GAEb,IAAMmE,EAAkBnE,EAAMoE,WAAWf,KAAI,SAACgB,GAAD,OAAeA,EAAU1D,SAEhE2D,EAASR,KAAKS,IAAL,MAAAT,KAAI,YAAQK,IAE3B,OACE,qBAAKjD,UAAU,QAAf,SACGlB,EAAMoE,WAAWf,KAAI,SAACgB,GAAD,OACpB,cAAC,EAAD,CACE1D,MAAO0D,EAAU1D,MACjBkD,SAAUS,EACVL,MAAOI,EAAUJ,OACZI,EAAUJ,aCaVO,EA3BO,SAACxE,GAGrB,IAH+B,EAGzByE,EAAkB,CACtB,CAAER,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,GACvB,CAAEsD,MAAO,MAAOtD,MAAO,IAfM,cAmBTX,EAAM0E,UAnBG,IAmB/B,2BAAsC,CAAC,IAA5BpB,EAA2B,QAEpCmB,EADcnB,EAAQnB,KAAKwC,YACJhE,OAAS2C,EAAQR,QArBX,8BAwB/B,OAAO,cAAC,EAAD,CAAOsB,WAAYK,K,MCQbG,MAzBf,SAAkB5E,GAEhB,MAAgCC,mBAAS,QAAzC,mBAAOqC,EAAP,KAAauC,EAAb,KAMMC,EAAsB9E,EAAMgD,MAAM+B,QAAO,SAACzB,GAC9C,OAAOA,EAAQnB,KAAKI,cAAcyC,aAAe1C,KAI7C2C,EAAajF,EAAM4C,SAGzB,OACE,eAAC,EAAD,CAAM1B,UAAU,WAAhB,UACE,cAAC,EAAD,CAAQuC,SAAUnB,EAAMoB,UAfL,SAACwB,GACtBL,EAAgBK,MAed,cAAC,EAAD,CAAeR,SAAUI,IACzB,cAAC,EAAD,CAAclC,SAAUqC,EAAYjC,MAAO8B,EAAqBxC,KAAMA,Q,QCqE7D6C,G,MA7FK,SAACnF,GAEnB,MAAwCC,mBAAS,IAAjD,mBAAOmF,EAAP,KAAqBC,EAArB,KAMA,EAA0CpF,mBAAS,IAAnD,mBAAOqF,EAAP,KAAsBC,EAAtB,KAMA,EAAsCtF,mBAAS,IAA/C,mBAAOuF,EAAP,KAAoBC,EAApB,KAgCA,OACE,uBAAMzE,SA3Bc,SAACT,GAErBA,EAAMC,iBAGN,IAAMkF,EAAiB,CACrB7C,MAAOuC,EACPtC,QAASwC,EACTnD,KAAM,IAAIwD,KAAKH,IAIjB,GAAmC,KAAhCE,EAAe7C,MAAM+C,OAEtB,OADAC,MAAM,wCACC,EAIT7F,EAAM8F,eAAeJ,GAGrBL,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACE,qBAAKvE,UAAU,aAAf,SACE,+CAEF,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBACAC,YAAY,eACVC,KAAK,OACLT,MAAOyE,EACPnE,SAvDiB,SAACV,GAC1B8E,EAAgB9E,EAAMG,OAAOC,aAyDzB,sBAAKO,UAAU,uBAAf,UACE,2CADF,IAEI,IACF,uBACEE,KAAK,SACLT,MAAO2E,EACPS,IAAI,MACJC,KAAK,MACL7E,YAAY,OACZF,SA7DkB,SAACV,GAC3BgF,EAAiBhF,EAAMG,OAAOC,aA+D1B,sBAAKO,UAAU,uBAAf,UACE,yCACA,uBACEE,KAAK,OACLT,MAAO6E,EACPO,IAAI,aACJxB,IAAI,aACJtD,SAjEgB,SAACV,GACzBkF,EAAelF,EAAMG,OAAOC,gBAoE1B,sBAAKO,UAAU,uBAAf,UAEE,wBAAQE,KAAK,SAASC,QAASrB,EAAMiG,SAArC,oBACA,wBAAQ7E,KAAK,SAAb,yB,gBC/ER8E,IAASC,cAVc,CACnBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAIX,IAEeC,EAFAT,IAASS,WC4GTC,EAnHI,SAAC5G,GAClB,MAAgCC,oBAAS,GAAzC,mBAAO4G,EAAP,KAAiBC,EAAjB,KACA,EAAoC7G,oBAAS,GAA7C,mBAAOgF,EAAP,KAAmB8B,EAAnB,KAEIC,EAAY,KAqFhB,OACE,sBAAK9F,UAAU,cAAf,WACI2F,IAAa5B,GACb,gCAEE,wBAAQ5D,QAfS,WACvB0F,GAAc,GACd/G,EAAMiH,cAAa,IAab,4BAA2D,IAC3D,wBAAQ5F,QAxBS,WACvByF,GAAY,IAuBN,4BAGHD,IAAa5B,GACZ,cAAC,EAAD,CACEa,eA7FoB,SAACoB,GAE3B,IAAMC,EAAc,uCAAG,WAAOD,EAAgBE,GAAvB,mBAAAjE,EAAA,6DACjBkE,EAAS,EADQ,SAIEC,MACrB,qEALmB,WAIfC,EAJe,QAQPC,GARO,sBASb,IAAIC,MAAM,gDATG,uBAaMF,EAASG,OAbf,YAgBQC,KAHvBC,EAbe,QAgBJR,KAIfC,EAASQ,OAAOC,KAAKF,EAAaR,IAASnE,QAG7C0D,EACGoB,IADH,mBACmBX,EADnB,YAC6BC,IAC1BW,IAAI,CACHC,KAAMf,EAAerE,MACrBqF,MAAOhB,EAAepE,SAEvBqF,MAAMtC,OAGTc,EACGoB,IADH,mBACmBX,EADnB,YAC6BC,EAD7B,UAEGW,IAAI,CACH9F,MAAOgF,EAAe/E,KAAKwC,WAC3BtC,IAAK6E,EAAe/E,KAAKC,eAAe,QAAS,CAAEC,IAAK,YACxDC,KAAM4E,EAAe/E,KAAKI,gBAE3B4F,MAAMtC,OAETmB,EAAYK,EAzCS,4CAAH,wDA6CpBF,EAAeD,EAAgBlH,EAAMoH,QAClCgB,MAAK,WACJtB,GAAY,GAEZ,IAAMxD,EAAO,2BACR4D,GADQ,IAEX3D,GAAIyD,IAINhH,EAAMqI,aAAa/E,MAEpB6E,OAAM,SAACG,GACN1H,QAAQC,IAAI,4BAkCVoF,SA1BkB,WACxBa,GAAY,MA4BT7B,GACC,gCACG,IACD,yEAAiD,IACjD,wBAAQ5D,QAxBU,WACxB0F,GAAc,GACd/G,EAAMiH,cAAa,IAsBb,oBAAoD,WCoJ/CsB,MA/Pf,WACE,MAAgCtI,mBAAS,IAAzC,mBAAOyE,EAAP,KAAiB8D,EAAjB,KAEA,EAAkCvI,oBAAS,GAA3C,mBAAOwI,EAAP,KAAkBC,EAAlB,KAEA,EAAkCzI,oBAAS,GAA3C,mBAAO0I,EAAP,KAAkBC,EAAlB,KAEA,EAAoC3I,qBAApC,mBAAO4I,EAAP,KAAmBC,EAAnB,KAEA,EAAgC7I,mBAAS,IAAzC,mBAAO8I,EAAP,KAAiBC,EAAjB,KAEA,EAAgC/I,mBAAS,IAAzC,mBAAiBgJ,GAAjB,WAEA,EAAoChJ,oBAAS,GAA7C,mBAAOgF,EAAP,KAAmB8B,EAAnB,KA8DA,OA1CAmC,qBAAU,WACR,IAAMC,EAAa,uCAAG,kCAAAhG,EAAA,6DACpBuF,GAAa,GADO,SAGGpB,MACrB,qEAJkB,WAGdC,EAHc,QAONC,GAPM,sBAQZ,IAAIC,MAAM,gDARE,uBAYOF,EAASG,OAZhB,OAgBpB,IAAW0B,KAJLxB,EAZc,OAcdyB,EAAiB,GAELzB,EAAaiB,GAC7BjI,QAAQC,IAAI+G,EAAaiB,GAAYO,IACrCC,EAAeC,KAAK,CAClB/F,GAAI6F,EACJvG,MAAO+E,EAAaiB,GAAYO,GAAKnB,KACrCnF,OAAQ8E,EAAaiB,GAAYO,GAAKlB,MACtC/F,KAAM,IAAIwD,KACRiC,EAAaiB,GAAYO,GAAKjH,KAAKG,KACnCsF,EAAaiB,GAAYO,GAAKjH,KAAKD,MACnC0F,EAAaiB,GAAYO,GAAKjH,KAAKE,OAIzCmG,EAAYa,GACZX,GAAa,GA9BO,4CAAH,qDAiCnBS,IACGf,OACAD,OAAM,SAACG,GACNI,GAAa,GACbE,EAAaN,EAAMiB,cAEtB,CAACV,EAAYE,IAEZN,EAEA,kCACE,6CAKFE,EAEA,kCACE,4BAAIA,MAqJR,gCACE,cAAC,EAAD,CACE5G,SAAUgH,EACV/G,UA7IiB,WACrB8G,IACAE,EAAY,IACZC,EAAY,KA2IRnI,SAxIgB,SAACZ,EAAaE,GAIlC,GAHAF,EAAcA,EAAY0F,OAC1BxF,EAAcA,EAAYwF,OAEN,KAAhB1F,GAAsC,KAAhBE,EAA1B,CAKA4I,EAAY9I,GACZ+I,EAAY7I,GAEZ,IAAMoJ,EAAU,uCAAG,gCAAArG,EAAA,6DACjBuF,GAAa,GADI,SAIMpB,MACrB,kEALe,WAIXC,EAJW,QAQHC,GARG,sBAST,IAAIC,MAAM,6CATD,uBAaUF,EAASG,OAbnB,OAaXE,EAbW,cAAAzE,EAAA,KAgBCyE,GAhBD,kDAgBNwB,EAhBM,WAkBbxB,EAAawB,GAAKK,OAASvJ,GAC3B0H,EAAawB,GAAKM,OAAStJ,EAnBd,wBAqBb0I,EAAcM,GArBD,mDA2BjBvD,MAAM,oCACNmD,EAAY,IACZC,EAAY,IA7BK,4CAAH,qDAgChBO,IACGpB,OACAD,OAAM,SAACG,GACNI,GAAa,GACbE,EAAaN,EAAMiB,iBA3CrB1D,MAAM,uDAoIJ9E,SArFgB,SAACb,EAAaE,GAIlC,GAHAF,EAAcA,EAAY0F,OAC1BxF,EAAcA,EAAYwF,OAEN,KAAhB1F,GAAsC,KAAhBE,EAA1B,CAKA4I,EAAY9I,GACZ+I,EAAY7I,GAGZ,IAAMuJ,EAAc,SAACzJ,EAAaE,EAAawJ,GAC7CjD,EACGoB,IADH,gBACgB6B,IACb5B,IAAI,CACHyB,KAAMvJ,EACNwJ,KAAMtJ,IAEP+H,MAAMtC,QAGL2D,EAAU,uCAAG,kCAAArG,EAAA,6DACjBuF,GAAa,GADI,SAIMpB,MACrB,kEALe,WAIXC,EAJW,QAQHC,GARG,sBAST,IAAIC,MAAM,6CATD,uBAaUF,EAASG,OAbnB,OAaXE,EAbW,cAAAzE,EAAA,KAgBCyE,GAhBD,kDAgBNwB,EAhBM,WAkBbxB,EAAawB,GAAKK,OAASvJ,GAC3B0H,EAAawB,GAAKM,OAAStJ,EAnBd,wBAqBb4I,EAAY,IACZC,EAAY,IACZpD,MAAM,4BAvBO,mDA6BX+D,EAAQhC,EAAa3E,OAE3B6F,EAAcc,GAGdD,EAAYzJ,EAAaE,EAAawJ,GAlCrB,4CAAH,qDAqChBJ,IACGpB,OACAD,OAAM,SAACG,GACNI,GAAa,GACbE,EAAaN,EAAMiB,iBA3DrB1D,MAAM,yDAkFQ,KAAbkD,GACC,cAAC,EAAD,CAAY9B,aAnBQ,SAACrE,GACzBhC,QAAQC,IAAI,gBAAkB+B,GAG5BmE,IADEnE,IAgB6CwE,OAAQyB,EAAYR,aAxJ7C,SAAC/E,GACzBkF,GAAY,SAACqB,GACX,MAAM,CAAEvG,GAAR,mBAAoBuG,UAwJpB,cAAC,EAAD,CAAUjH,SAAUqC,EAAYjC,MAAO0B,IACzB,KAAbqE,GACC,mBAAGrH,MAAO,CAAEE,MAAO,QAASkI,UAAW,UAAvC,iDC1PRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a706c25d.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SignInForm = (props) => {\r\n\r\n    const [enteredUser, setEnteredUser] = useState(\"\");\r\n    const userChangeHandler = (event) => {\r\n        setEnteredUser(event.target.value);\r\n    };\r\n\r\n    const [enteredPass, setEnteredPass] = useState(\"\");\r\n    const passChangeHandler= (event) => {\r\n        setEnteredPass(event.target.value);\r\n    };\r\n\r\n     const submitHandler = (event) =>{\r\n         event.preventDefault();\r\n\r\n         let inOrUp = event.target.value;\r\n\r\n         //validate here\r\n\r\n         //sign in\r\n          if(inOrUp === \"in\"){\r\n              console.log(\"Signing in\");\r\n              props.onSignIn(enteredUser,enteredPass);\r\n          } \r\n        //  //sign up\r\n          else if (inOrUp === \"up\"){\r\n              console.log(\"Signing up\");\r\n              props.onSignUp(enteredUser, enteredPass);\r\n          } else {\r\n              console.log(\"ERROR SIGNING IN OR UP\");\r\n             return;\r\n          }\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={userChangeHandler}\r\n        value={enteredUser}\r\n        className=\"input\"\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n      />\r\n      <input\r\n        onChange={passChangeHandler}\r\n        value={enteredPass}\r\n        className=\"input\"\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n      />\r\n      <div>\r\n        <button value=\"in\" onClick={submitHandler} type=\"button\" >Login</button>\r\n        <button value=\"up\" onClick={submitHandler} type=\"button\" >Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","export default __webpack_public_path__ + \"static/media/favicon.2f506ebe.ico\";","//import { useState } from \"react\";\r\n\r\nimport SignInForm from \"../UI/SignInForm\";\r\n\r\nimport \"../css/Header.css\";\r\nimport logoUrl from \"../UI/favicon.ico\";\r\n\r\n//Header component for entire page\r\n//possibly move fetching users and signing in/up into this component\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left\">\r\n        <img src={logoUrl} alt=\"MC logo\" style={{ width: \"100px\" }} />\r\n        <h2 style={{ color: \"white\", lineHeight: \"50px\", padding: \"0px 20px\" }}>\r\n          Expense Tracker\r\n        </h2>\r\n      </div>\r\n      {props.username !== \"\" && (\r\n        <div className=\"right\">\r\n          <p>{props.username}</p>{\" \"}\r\n          <button onClick={props.onSignOut}>Sign Out</button>\r\n        </div>\r\n      )}\r\n      {props.username === \"\" && (\r\n        <div className=\"right\">\r\n          <SignInForm onSignIn={props.onSignIn} onSignUp={props.onSignUp} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/ExpenseDate.css';\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props){\r\n    \r\n    //Extract date from props\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        \r\n    //return date component\r\n    <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expense-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  \r\n  //TODO: onclick for removing\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        {props.removing && <button className=\"removeBtn\">X</button>}\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  //sort expenses in ascending order \r\n  props.items.sort((a,b) => \r\n    a.date - b.date\r\n  );\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          removing={props.removing}\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  //passed from App, pass to ExpensesList\r\n  const isRemoving = props.removing;\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart expenses={currentYearExpenses} />\r\n      <ExpensesList removing={isRemoving} items={currentYearExpenses} year={year}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //checks if title is entered. If not, prevent submission.\r\n    if(newExpenseData.title.trim() === ''){\r\n      alert(\"Must enter a title for this expense\");\r\n      return false;\r\n    }\r\n\r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>New Expense</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import firebase from 'firebase';\r\n//import { initializeApp } from \"firebase/app\";\r\n  \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB7602g76FM5d_ajJm-h8lz_xmST3B0zVM\",\r\n    authDomain: \"exp-track-bdba3.firebaseapp.com\",\r\n    databaseURL: \"https://exp-track-bdba3-default-rtdb.firebaseio.com\",\r\n    projectId: \"exp-track-bdba3\",\r\n    storageBucket: \"exp-track-bdba3.appspot.com\",\r\n    messagingSenderId: \"337970307805\",\r\n    appId: \"1:337970307805:web:4289cd54f487468601b134\"\r\n  };\r\n    \r\nfirebase.initializeApp(firebaseConfig);\r\nvar database = firebase.database();\r\n  \r\nexport default database;","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\nimport database from \"../../firebase\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  let newItemID = null;\r\n\r\n  //database insertion\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    // Push Function\r\n    const pushNewExpense = async (enteredExpense, userID) => {\r\n      let itemID = 0;\r\n\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      // if no items under this user, leave itemID at 0\r\n      if (responseData[userID] === undefined) {\r\n        //do nothing\r\n      } else {\r\n        // 'auto-increment'\r\n        itemID = Object.keys(responseData[userID]).length;\r\n      }\r\n\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getMonth(),\r\n          day: enteredExpense.date.toLocaleString(\"en-US\", { day: \"2-digit\" }),\r\n          year: enteredExpense.date.getFullYear(),\r\n        })\r\n        .catch(alert);\r\n\r\n      newItemID = itemID;\r\n    }; //endPushNewItem\r\n\r\n    //waits for the push to go through successfully before refreshing list\r\n    pushNewExpense(enteredExpense, props.userID)\r\n      .then(() => {\r\n        setIsAdding(false);\r\n\r\n        const expense = {\r\n          ...enteredExpense,\r\n          id: newItemID,\r\n        };\r\n\r\n        //send to App.js for page refresh\r\n        props.onGetExpense(expense);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Something went wrong\");\r\n      });\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setRemoveHandler = () => {\r\n    setIsRemoving(true);\r\n    props.onIsRemoving(true);\r\n  };\r\n\r\n  const stopRemoveHandler = () => {\r\n    setIsRemoving(false);\r\n    props.onIsRemoving(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isAdding && !isRemoving && (\r\n        <div>\r\n          {/* TODO: Add editing capabilities to remove */}\r\n          <button onClick={setRemoveHandler}>Remove Expense</button>{\" \"}\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n        </div>\r\n      )}\r\n      {isAdding && !isRemoving && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isRemoving && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>Which expense would you like to remove?</h3>{\" \"}\r\n          <button onClick={stopRemoveHandler}>Cancel</button>{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nimport database from \"./firebase\";\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  const [userNumber, setUserNumber] = useState();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [userPass, setUserPass] = useState(\"\");\r\n\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  // persistent data upon page refresh\r\n  //\r\n  // var getInitialUser = () => {\r\n  //   var prevUser = localStorage.getItem('prevUser') || \"\";\r\n  //   var prevPass = localStorage.getItem('prevPass') || \"\";\r\n  //   return {\r\n  //     prevUser: prevUser,\r\n  //     prevPass: prevPass\r\n  //   };\r\n  // };\r\n\r\n  // var setUser = (userName, userPass) => {\r\n  //   localStorage.setItem('prevUser',userName);\r\n  //   localStorage.setItem('prevPass', userPass);\r\n  //   setUserName(userName);\r\n  //   setUserPass(userPass);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      setIsLoading(true);\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      const loadedExpenses = [];\r\n\r\n      for (const key in responseData[userNumber]) {\r\n        console.log(responseData[userNumber][key]);\r\n        loadedExpenses.push({\r\n          id: key,\r\n          title: responseData[userNumber][key].name,\r\n          amount: responseData[userNumber][key].price,\r\n          date: new Date(\r\n            responseData[userNumber][key].date.year,\r\n            responseData[userNumber][key].date.month,\r\n            responseData[userNumber][key].date.day\r\n          ),\r\n        }); //push\r\n      } //for loop\r\n      setExpenses(loadedExpenses);\r\n      setIsLoading(false);\r\n    }; //fetchExpenses\r\n\r\n    fetchExpenses()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  }, [userNumber, userName]); //useEffect\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const signOutHandler = () => {\r\n    setUserNumber();\r\n    setUserName(\"\");\r\n    setUserPass(\"\");\r\n  };\r\n\r\n  const signInHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user exists\r\n      for (const key in responseData) {\r\n        if (\r\n          responseData[key].user === enteredUser &&\r\n          responseData[key].pass === enteredPass\r\n        ) {\r\n          setUserNumber(key);\r\n          return;\r\n        } //endif\r\n      } //end for\r\n\r\n      //user doesn't exist\r\n      alert(\"Invalid log in, please try again\");\r\n      setUserName(\"\");\r\n      setUserPass(\"\");\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  const signUpHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    // Push Function\r\n    const pushNewUser = (enteredUser, enteredPass, newID) => {\r\n      database\r\n        .ref(`users/${newID}`)\r\n        .set({\r\n          user: enteredUser,\r\n          pass: enteredPass,\r\n        })\r\n        .catch(alert);\r\n    }; //endPushNewUser\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user already exists\r\n      for (const key in responseData) {\r\n        if (\r\n          responseData[key].user === enteredUser &&\r\n          responseData[key].pass === enteredPass\r\n        ) {\r\n          setUserName(\"\");\r\n          setUserPass(\"\");\r\n          alert(\"Try signing in, instead.\");\r\n          return;\r\n        } //if\r\n      } //for\r\n\r\n      //if user does not exist\r\n      const newID = responseData.length; //auto increment\r\n\r\n      setUserNumber(newID);\r\n\r\n      //push new user\r\n      pushNewUser(enteredUser, enteredPass, newID);\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  //passed from NewExpense, pass to Expenses\r\n  const isRemovingHandler = (removing) => {\r\n    console.log(\"isRemoving = \" + removing);\r\n    //Should be true all of the time\r\n    if (removing){\r\n      setIsRemoving(true);\r\n    } else{\r\n      setIsRemoving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        username={userName}\r\n        onSignOut={signOutHandler}\r\n        onSignIn={signInHandler}\r\n        onSignUp={signUpHandler}\r\n      />\r\n      {userName !== \"\" && (\r\n        <NewExpense onIsRemoving={isRemovingHandler} userID={userNumber} onGetExpense={addExpenseHandler} />\r\n      )}\r\n      <Expenses removing={isRemoving} items={expenses} />\r\n      {userName === \"\" && (\r\n        <p style={{ color: \"black\", textAlign: \"center\" }}>\r\n          Please sign in to find expenses\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} //app\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}