{"version":3,"sources":["components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/ExpenseItem.js","components/graphs/Filter.js","components/expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Header","className","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","Filter","value","selected","onChange","event","onGetYear","target","Expenses","useState","setSelectedYear","currentYearExpenses","items","filter","expense","toString","selectedYear","map","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpenseData","Date","onStoreExpense","placeholder","type","min","step","max","NewExpense","enteredExpense","Math","random","onGetExpense","db","App","expenses","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec942893.chunk.js","sourcesContent":["import \"../css/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2>Expense Tracker!</h2>\r\n      <div className=\"right\">\r\n        <button>Login</button>\r\n        <button>Register</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return(\r\n    <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expense-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import '../css/ExpenseItem.css';\r\nimport '../css/Card.css';\r\n\r\nimport ExpenseDate from './ExpenseDate.js';\r\nimport Card from \"../UI/Card.js\";\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n\r\n      {currentYearExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //TODO: Throw this into DB\r\n    //console.log(newExpenseData);\r\n\r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>New Expense</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from './ExpenseForm';\r\n\r\nimport '../css/NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const storeExpenseHandler = (enteredExpense) => {\r\n        const expense = {\r\n            ...enteredExpense,\r\n            // Placeholder for now --> will not need this once db is connected\r\n            id: Math.random.toString()\r\n        };\r\n        \r\n        //send to App.js\r\n        props.onGetExpense(expense);\r\n    };\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            <ExpenseForm onStoreExpense={storeExpenseHandler}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewExpense;","import { useState } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\n\r\nconst db = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"React Udemy Course\",\r\n    amount: 94.12,\r\n    date: new Date(2022, 2, 1),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState(db);\r\n  const addExpenseHandler = expense => {\r\n    setExpenses(prevExpenses => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NewExpense onGetExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}