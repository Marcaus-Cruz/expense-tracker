{"version":3,"sources":["components/UI/SignInForm.js","components/UI/favicon.ico","components/UI/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/NewExpense/ExpenseForm.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","firebase.js","components/NewExpense/NewExpense.js","components/expenses/Expenses.js","App.js","index.js"],"names":["SignInForm","props","useState","enteredUser","setEnteredUser","enteredPass","setEnteredPass","submitHandler","event","preventDefault","inOrUp","target","value","console","log","onSignIn","onSignUp","onSubmit","onChange","className","placeholder","type","onClick","Header","src","logoUrl","alt","style","width","color","lineHeight","padding","username","marginRight","onSignOut","monthObj","getTrueMonth","month","Object","keys","ExpenseDate","date","getUTCMonth","day","getUTCDate","year","getFullYear","Card","classes","children","ExpenseForm","editing","title","enteredTitle","setEnteredTitle","amount","enteredAmount","setEnteredAmount","slice","enteredDate","setEnteredDate","heading","submitBtnText","itemID","newExpenseData","id","Date","onCancel","onStoreExpense","required","min","step","max","ExpenseItem","showForm","setShowForm","showFormHandler","onRemoveItem","ExpensesList","items","length","sort","a","b","map","expense","Filter","selected","onGetYear","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","ChartBar","barFillHeight","maxValue","Math","round","labelClass","setLabelClass","height","prefix","innerHTML","monthNum","currentlySelectedMonths","includes","onSelectMonth","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","ExpensesChart","chartDataPoints","expenses","getMonth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","NewExpense","isAdding","setIsAdding","isEditing","setIsEditing","newItemID","onIsEditing","enteredExpense","pushNewExpense","userID","fetch","response","ok","Error","json","responseData","ref","set","name","price","catch","alert","getUTCFullYear","then","onGetExpense","error","Expenses","currentMonthExpenses","setSelectedYear","setCurrentlySelectedMonths","currentYearExpenses","filter","toString","selectedYear","prevMonths","pushChangedItem","onRefreshExpenses","removeExpense","remove","onRemoveExpense","months","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","userNumber","setUserNumber","userName","setUserName","setUserPass","useEffect","fetchExpenses","key","loadedExpenses","push","message","addExpenseHandler","prevExpenses","removeExpenseHandler","expenseID","filtered","validate","trim","fetchUsers","user","pass","pushNewUser","newID","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e7ed1b6.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SignInForm = (props) => {\r\n\r\n    const [enteredUser, setEnteredUser] = useState(\"\");\r\n    const userChangeHandler = (event) => {\r\n        setEnteredUser(event.target.value);\r\n    };\r\n\r\n    const [enteredPass, setEnteredPass] = useState(\"\");\r\n    const passChangeHandler= (event) => {\r\n        setEnteredPass(event.target.value);\r\n    };\r\n\r\n     const submitHandler = (event) =>{\r\n         event.preventDefault();\r\n\r\n         let inOrUp = event.target.value;\r\n\r\n         //validate here\r\n\r\n         //sign in\r\n          if(inOrUp === \"in\"){\r\n              console.log(\"Signing in\");\r\n              props.onSignIn(enteredUser,enteredPass);\r\n          } \r\n        //  //sign up\r\n          else if (inOrUp === \"up\"){\r\n              console.log(\"Signing up\");\r\n              props.onSignUp(enteredUser, enteredPass);\r\n          } else {\r\n              console.log(\"ERROR SIGNING IN OR UP\");\r\n             return;\r\n          }\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={userChangeHandler}\r\n        value={enteredUser}\r\n        className=\"input\"\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n      />\r\n      <input\r\n        onChange={passChangeHandler}\r\n        value={enteredPass}\r\n        className=\"input\"\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n      />\r\n      <div>\r\n        <button value=\"in\" onClick={submitHandler} type=\"button\" >Login</button>\r\n        <button value=\"up\" onClick={submitHandler} type=\"button\" >Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","export default __webpack_public_path__ + \"static/media/favicon.2f506ebe.ico\";","import SignInForm from \"./SignInForm\";\r\n\r\nimport \"../css/Header.css\";\r\nimport logoUrl from \"../UI/favicon.ico\";\r\n\r\n//Header component for entire page\r\n//possibly move fetching users and signing in/up into this component\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left\">\r\n        <img src={logoUrl} alt=\"MC logo\" style={{ width: \"100px\" }} />\r\n        <h2 style={{ color: \"white\", lineHeight: \"50px\", padding: \"0px 20px\" }}>\r\n          Expense Tracker\r\n        </h2>\r\n      </div>\r\n      {props.username !== \"\" && (\r\n        <div className=\"right\">\r\n          <p style={{marginRight: \"20px\"}}>{props.username}</p>\r\n          <button style={{marginRight: \"0px\"}} onClick={props.onSignOut}>Sign Out</button>\r\n        </div>\r\n      )}\r\n      {props.username === \"\" && (\r\n        <div className=\"right\">\r\n          <SignInForm onSignIn={props.onSignIn} onSignUp={props.onSignUp} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../css/ExpenseDate.css\";\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props) {\r\n  //Extract date from props\r\n  var month = getTrueMonth(props.date.getUTCMonth());\r\n  var day = props.date.getUTCDate();\r\n  var year = props.date.getFullYear();\r\n\r\n  return (\r\n    //return date component\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//TODO:\r\n//Wasted space here, clean up later\r\nconst monthObj = {\r\n  \"January\": 31,\r\n  \"February\": 28,\r\n  \"March\": 31,\r\n  \"April\": 30,\r\n  \"May\": 31,\r\n  \"June\": 30,\r\n  \"July\": 31,\r\n  \"August\": 31,\r\n  \"September\": 30,\r\n  \"October\": 31,\r\n  \"November\": 30,\r\n  \"December\": 31,\r\n};\r\n\r\n//My own function because date objects are weird\r\nconst getTrueMonth = (month) => {\r\n  return Object.keys(monthObj)[month];\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense or ExpenseItem\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(props.editing ? props.title : \"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(props.editing ? props.amount : \"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  \r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(props.editing ? `${props.date.getFullYear()}-${('0' + (props.date.getUTCMonth()+1)).slice(-2)}-${('0' + props.date.getUTCDate()).slice(-2)}` : \"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    let itemID = -1;\r\n\r\n    if(props.editing){\r\n      itemID = props.itemID\r\n    }\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      id: itemID,\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //validate here if requires don't work\r\n\r\n    if(props.editing){\r\n      props.onCancel();\r\n    } \r\n    \r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    // or send to Expense item -> expensesList -> expenses to update item if editing\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  var heading = \"New Expense\";\r\n  var submitBtnText = \"Add\";\r\n  if(props.editing){\r\n    heading = \"\";\r\n    submitBtnText = \"Save\";\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>{heading}</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          required={true}\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n          required={true}\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n          required={true}\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            placeholder={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button id=\"cancelBtn\" type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">{submitBtnText}</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpenseForm from \"../NewExpense/ExpenseForm\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  //calls function in expenses that removes\r\n  const removeHandler = () => {\r\n    props.onRemoveItem(props.id);\r\n  };\r\n\r\n  const showFormHandler = () => {\r\n    //if editing is in process, click edit to cancel out\r\n    if (showForm) {\r\n      setShowForm(false);\r\n    } else {\r\n      setShowForm(true);\r\n    }\r\n  };\r\n\r\n  if (props.editing) {\r\n    return (\r\n      <li>\r\n        <Card className=\"expense-item\">\r\n          <button className=\"removeBtn\" onClick={removeHandler}>\r\n            X\r\n          </button>\r\n          <button className=\"editBtn\" onClick={showFormHandler}>\r\n            edit\r\n          </button>\r\n          <ExpenseDate date={props.date} />\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n          </div>\r\n        </Card>\r\n        {showForm && (\r\n          <ExpenseForm\r\n            itemID={props.id}\r\n            date={props.date}\r\n            title={props.title}\r\n            amount={props.amount}\r\n            editing={props.editing}\r\n            onStoreExpense={props.onStoreExpense}\r\n            onCancel={showFormHandler}\r\n          />\r\n        )}\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li>\r\n        <Card className=\"expense-item\">\r\n          <ExpenseDate date={props.date} />\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  //sort expenses in ascending order\r\n  props.items.sort((a, b) => a.date - b.date);\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => ( <ExpenseItem\r\n          key={expense.id}\r\n          id={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          editing={props.editing}\r\n          onRemoveItem={props.onRemoveItem}\r\n          onStoreExpense={props.onStoreExpense}\r\n        /> ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  const [labelClass, setLabelClass] = useState(\"chart-bar__label\");\r\n\r\n  const selectHandler = (event) => {\r\n    var prefix = event.target.innerHTML;\r\n    var monthNum = monthObj[prefix];\r\n\r\n    //deselect\r\n    if (props.currentlySelectedMonths.includes(monthNum)) {\r\n      setLabelClass(\"chart-bar__label\");\r\n    }\r\n    //select\r\n    else {\r\n      setLabelClass(\"chart-bar__label selected\");\r\n    }\r\n    props.onSelectMonth(monthNum);\r\n  }; //select handler\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className={labelClass} onClick={selectHandler}>\r\n        {props.label}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst monthObj = {\r\n  Jan: 0,\r\n  Feb: 1,\r\n  Mar: 2,\r\n  Apr: 3,\r\n  May: 4,\r\n  Jun: 5,\r\n  Jul: 6,\r\n  Aug: 7,\r\n  Sep: 8,\r\n  Oct: 9,\r\n  Nov: 10,\r\n  Dec: 11,\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n          onSelectMonth={props.onSelectMonth}\r\n          currentlySelectedMonths={props.currentlySelectedMonths}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} currentlySelectedMonths={props.currentlySelectedMonths} onSelectMonth={props.onSelectMonth}/>;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import firebase from 'firebase';\r\n//import { initializeApp } from \"firebase/app\";\r\n  \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB7602g76FM5d_ajJm-h8lz_xmST3B0zVM\",\r\n    authDomain: \"exp-track-bdba3.firebaseapp.com\",\r\n    databaseURL: \"https://exp-track-bdba3-default-rtdb.firebaseio.com\",\r\n    projectId: \"exp-track-bdba3\",\r\n    storageBucket: \"exp-track-bdba3.appspot.com\",\r\n    messagingSenderId: \"337970307805\",\r\n    appId: \"1:337970307805:web:4289cd54f487468601b134\"\r\n  };\r\n    \r\nfirebase.initializeApp(firebaseConfig);\r\nvar database = firebase.database();\r\n\r\n  \r\nexport default database;","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\nimport database from \"../../firebase\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  let newItemID = null;\r\n\r\n  //database insertion\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    // Push Function\r\n    const pushNewExpense = async (enteredExpense, userID) => {\r\n      let itemID = 0;\r\n\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      // if no items under this user, leave itemID at 0\r\n      if (!responseData[userID]) {\r\n        //do nothing\r\n      } else {\r\n        // 'auto-increment'\r\n        itemID = Math.max(...Object.keys(responseData[userID])) + 1;\r\n      }\r\n\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getUTCMonth(),\r\n          day: enteredExpense.date.getUTCDate(),\r\n          year: enteredExpense.date.getUTCFullYear(),\r\n        })\r\n        .catch(alert);\r\n\r\n      newItemID = itemID;\r\n    }; //endPushNewItem\r\n\r\n    //waits for the push to go through successfully before refreshing list\r\n    pushNewExpense(enteredExpense, props.userID)\r\n      .then(() => {\r\n        setIsAdding(false);\r\n\r\n        const expense = {\r\n          ...enteredExpense,\r\n          id: newItemID,\r\n        };\r\n\r\n        //send to App.js for page refresh\r\n        props.onGetExpense(expense);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setEditHandler = () => {\r\n    setIsEditing(true);\r\n    props.onIsEditing(true);\r\n  };\r\n\r\n  const stopEditHandler = () => {\r\n    setIsEditing(false);\r\n    props.onIsEditing(false);\r\n  };\r\n\r\n  return (\r\n     <div className=\"new-expense\"> \r\n      {!isAdding && !isEditing && (\r\n        <div>\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n          <button onClick={setEditHandler}>Edit</button>{\" \"}\r\n        </div>\r\n      )}\r\n      {isAdding && !isEditing && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isEditing && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>Which expense(s) would you like to edit?</h3>{\" \"}\r\n          <button onClick={stopEditHandler}>Done</button>{\" \"}\r\n        </div>\r\n      )}\r\n     </div> \r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\nimport NewExpense from \"../NewExpense/NewExpense\";\r\n\r\nimport database from \"../../firebase\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  //State to manage selected months\r\n  const [currentlySelectedMonths, setCurrentlySelectedMonths] = useState([]);\r\n\r\n  const getMonthHandler = (monthNum) => {\r\n\r\n    //deselect month\r\n    if (currentlySelectedMonths.includes(monthNum)) {\r\n      setCurrentlySelectedMonths((prevMonths) => {\r\n        const newMonths = prevMonths.filter(month => {\r\n          return month !== monthNum;\r\n        });\r\n        return newMonths;\r\n      });\r\n    } \r\n    //select month\r\n    else {\r\n      setCurrentlySelectedMonths((prevMonths) => {\r\n        return [...prevMonths, monthNum];\r\n      });\r\n    }\r\n\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  var currentMonthExpenses;\r\n\r\n  if (currentlySelectedMonths.length > 0) {\r\n    currentMonthExpenses = props.items.filter((expense) => {\r\n      return (\r\n        currentlySelectedMonths.includes(expense.date.getUTCMonth()) &&\r\n        expense.date.getFullYear().toString() === year\r\n      );\r\n    });\r\n  } else {\r\n    // Use selected year to copy an array to display onto page\r\n    currentMonthExpenses = currentYearExpenses;\r\n  }\r\n\r\n  //passed from App, pass to ExpensesList\r\n  const isEditing = props.editing;\r\n\r\n  const removeItemHandler = (itemID) => {\r\n    //do removal here\r\n    const removeExpense = async (userID, itemID) => {\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .remove()\r\n        .then(() => {\r\n          console.log(\"remove successful\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    //add call to props.onRemoveExpense to refresh list\r\n    removeExpense(props.userID, itemID).then(() => {\r\n      props.onRemoveExpense(itemID);\r\n    });\r\n  };\r\n\r\n  //push edit here\r\n  const editExpenseHandler = (enteredExpense) => {\r\n    //add new expense here\r\n    const pushChangedItem = async (enteredExpense, userID) => {\r\n      //set new fields\r\n      database\r\n        .ref(`expenses/${userID}/${enteredExpense.id}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${enteredExpense.id}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getUTCMonth(),\r\n          day: enteredExpense.date.getUTCDate(),\r\n          year: enteredExpense.date.getUTCFullYear(),\r\n        })\r\n        .catch(alert);\r\n    }; //end pushChangedItem\r\n\r\n    //call pushChangedItem and refresh page\r\n    pushChangedItem(enteredExpense, props.userID)\r\n      .then(() => {\r\n        props.onRefreshExpenses(enteredExpense);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      {props.userID && <NewExpense\r\n          onIsEditing={props.onIsEditing}\r\n          userID={props.userID}\r\n          onGetExpense={props.onGetExpense}\r\n        />}\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart\r\n        expenses={currentYearExpenses}\r\n        onSelectMonth={getMonthHandler}\r\n        currentlySelectedMonths={currentlySelectedMonths}\r\n      />\r\n      <ExpensesList\r\n        onStoreExpense={editExpenseHandler}\r\n        onRemoveItem={removeItemHandler}\r\n        editing={isEditing}\r\n        items={currentMonthExpenses}\r\n        year={year}\r\n        months={currentlySelectedMonths}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./components/UI/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\n\r\nimport database from \"./firebase\";\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  const [userNumber, setUserNumber] = useState(6);\r\n\r\n  const [userName, setUserName] = useState(\"dummydata\");\r\n\r\n  const [userPass, setUserPass] = useState(\"dummydata\");\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // persistent data upon page refresh\r\n  //\r\n  // var getInitialUser = () => {\r\n  //   var prevUser = localStorage.getItem('prevUser') || \"\";\r\n  //   var prevPass = localStorage.getItem('prevPass') || \"\";\r\n  //   return {\r\n  //     prevUser: prevUser,\r\n  //     prevPass: prevPass\r\n  //   };\r\n  // };\r\n\r\n  // var setUser = (userName, userPass) => {\r\n  //   localStorage.setItem('prevUser',userName);\r\n  //   localStorage.setItem('prevPass', userPass);\r\n  //   setUserName(userName);\r\n  //   setUserPass(userPass);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      setIsLoading(true);\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      const loadedExpenses = [];\r\n\r\n      for (const key in responseData[userNumber]) {\r\n        if (responseData[userNumber][key]) {\r\n          loadedExpenses.push({\r\n            id: key,\r\n            title: responseData[userNumber][key].name,\r\n            amount: responseData[userNumber][key].price,\r\n            date: new Date(\r\n              responseData[userNumber][key].date.year,\r\n              responseData[userNumber][key].date.month,\r\n              responseData[userNumber][key].date.day\r\n            ),\r\n          }); //push\r\n        }\r\n      } //for loop\r\n      setExpenses(loadedExpenses);\r\n      setIsLoading(false);\r\n    }; //fetchExpenses\r\n\r\n    fetchExpenses()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  }, [userNumber, userName]); //useEffect\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const removeExpenseHandler = (expenseID) => {\r\n    setExpenses((prevExpenses) => {\r\n      var filtered = prevExpenses.filter((expense) => {\r\n        return expense.id !== expenseID;\r\n      });\r\n      return [...filtered];\r\n    });\r\n  };\r\n\r\n  //combines removeExpenseHandler and addExpenseHandler to refresh internal list\r\n  //when changing an exspense but keeping the same id\r\n  const changeExpenseHandler = (expense) => {\r\n      removeExpenseHandler(expense.id);\r\n      addExpenseHandler(expense);\r\n  };\r\n\r\n\r\n  const validate = (enteredUser,enteredPass) => {\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return false;\r\n    }\r\n\r\n    if(enteredUser.length > 29 || enteredPass.length > 29){\r\n      alert(\"Username or password cannot exceed 30 characters\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const signOutHandler = () => {\r\n    setUserNumber();\r\n    setUserName(\"\");\r\n    setUserPass(\"\");\r\n  };\r\n\r\n  const signInHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    \r\n    if(!validate(enteredUser, enteredPass)){\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user exists\r\n      for (const key in responseData) {\r\n        if (responseData[key] === null) {\r\n          //do nothing - else it will fail to read\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserNumber(key);\r\n            return;\r\n          } //if\r\n        } //endif\r\n      } //end for\r\n\r\n      //user doesn't exist\r\n      alert(\"Invalid log in, please try again\");\r\n      setUserName(\"\");\r\n      setUserPass(\"\");\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  const signUpHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    \r\n    if(!validate(enteredUser, enteredPass)){\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    // Push Function\r\n    const pushNewUser = (enteredUser, enteredPass, newID) => {\r\n      database\r\n        .ref(`users/${newID}`)\r\n        .set({\r\n          user: enteredUser,\r\n          pass: enteredPass,\r\n        })\r\n        .catch(alert);\r\n    }; //endPushNewUser\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user already exists\r\n      for (const key in responseData) {\r\n        if (!responseData[key]) {\r\n          //do nothing\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserName(\"\");\r\n            setUserPass(\"\");\r\n            alert(\"Try signing in, instead.\");\r\n            return;\r\n          } //if\r\n        } //if\r\n      } //for\r\n\r\n      //if user does not exist\r\n      const newID = Math.max(...Object.keys(responseData)) + 1; //auto increment\r\n\r\n      setUserNumber(newID);\r\n\r\n      //push new user\r\n      pushNewUser(enteredUser, enteredPass, newID);\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  //passed from NewExpense, pass to Expenses\r\n  const isEditingHandler = (editing) => {\r\n    if (editing) {\r\n      setIsEditing(true);\r\n    } else {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        username={userName}\r\n        onSignOut={signOutHandler}\r\n        onSignIn={signInHandler}\r\n        onSignUp={signUpHandler}\r\n      />\r\n      <Expenses\r\n        onRemoveExpense={removeExpenseHandler}\r\n        userID={userNumber}\r\n        editing={isEditing}\r\n        onRefreshExpenses={changeExpenseHandler}\r\n        items={expenses}\r\n\r\n        onIsEditing={isEditingHandler}\r\n        onGetExpense={addExpenseHandler}\r\n      />\r\n      {userName === \"\" && (\r\n        <p style={{ color: \"black\", textAlign: \"center\" }}>\r\n          Please sign in to find expenses\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} //app\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}