{"version":3,"sources":["components/UI/SignInForm.js","components/UI/favicon.ico","components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/NewExpense/ExpenseForm.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","firebase.js","components/expenses/Expenses.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["SignInForm","props","useState","enteredUser","setEnteredUser","enteredPass","setEnteredPass","submitHandler","event","preventDefault","inOrUp","target","value","console","log","onSignIn","onSignUp","onSubmit","onChange","className","placeholder","type","onClick","Header","src","logoUrl","alt","style","width","color","lineHeight","padding","username","onSignOut","monthObj","getTrueMonth","month","Object","keys","numDays","ExpenseDate","date","getUTCMonth","day","getUTCDate","year","getFullYear","maxDays","removing","min","step","max","Card","classes","children","ExpenseForm","editing","title","enteredTitle","setEnteredTitle","amount","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","heading","submitBtnText","itemID","newExpenseData","id","Date","onCancel","onStoreExpense","required","ExpenseItem","showForm","setShowForm","showFormHandler","onRemoveItem","ExpensesList","items","length","sort","a","b","map","expense","Filter","selected","onGetYear","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","ExpensesChart","chartDataPoints","expenses","getMonth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","Expenses","setSelectedYear","currentYearExpenses","filter","toString","isEditing","selectedYear","enteredExpense","pushChangedItem","userID","ref","set","name","price","catch","alert","getUTCFullYear","then","onRefreshExpenses","error","removeExpense","remove","onRemoveExpense","NewExpense","isAdding","setIsAdding","setIsEditing","newItemID","onIsEditing","pushNewExpense","fetch","response","ok","Error","json","responseData","onGetExpense","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","userNumber","setUserNumber","userName","setUserName","setUserPass","useEffect","fetchExpenses","key","loadedExpenses","push","message","addExpenseHandler","prevExpenses","removeExpenseHandler","expenseID","filtered","trim","fetchUsers","user","pass","pushNewUser","newID","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d35d8ceb.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SignInForm = (props) => {\r\n\r\n    const [enteredUser, setEnteredUser] = useState(\"\");\r\n    const userChangeHandler = (event) => {\r\n        setEnteredUser(event.target.value);\r\n    };\r\n\r\n    const [enteredPass, setEnteredPass] = useState(\"\");\r\n    const passChangeHandler= (event) => {\r\n        setEnteredPass(event.target.value);\r\n    };\r\n\r\n     const submitHandler = (event) =>{\r\n         event.preventDefault();\r\n\r\n         let inOrUp = event.target.value;\r\n\r\n         //validate here\r\n\r\n         //sign in\r\n          if(inOrUp === \"in\"){\r\n              console.log(\"Signing in\");\r\n              props.onSignIn(enteredUser,enteredPass);\r\n          } \r\n        //  //sign up\r\n          else if (inOrUp === \"up\"){\r\n              console.log(\"Signing up\");\r\n              props.onSignUp(enteredUser, enteredPass);\r\n          } else {\r\n              console.log(\"ERROR SIGNING IN OR UP\");\r\n             return;\r\n          }\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={userChangeHandler}\r\n        value={enteredUser}\r\n        className=\"input\"\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n      />\r\n      <input\r\n        onChange={passChangeHandler}\r\n        value={enteredPass}\r\n        className=\"input\"\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n      />\r\n      <div>\r\n        <button value=\"in\" onClick={submitHandler} type=\"button\" >Login</button>\r\n        <button value=\"up\" onClick={submitHandler} type=\"button\" >Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","export default __webpack_public_path__ + \"static/media/favicon.2f506ebe.ico\";","//import { useState } from \"react\";\r\n\r\nimport SignInForm from \"../UI/SignInForm\";\r\n\r\nimport \"../css/Header.css\";\r\nimport logoUrl from \"../UI/favicon.ico\";\r\n\r\n//Header component for entire page\r\n//possibly move fetching users and signing in/up into this component\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left\">\r\n        <img src={logoUrl} alt=\"MC logo\" style={{ width: \"100px\" }} />\r\n        <h2 style={{ color: \"white\", lineHeight: \"50px\", padding: \"0px 20px\" }}>\r\n          Expense Tracker\r\n        </h2>\r\n      </div>\r\n      {props.username !== \"\" && (\r\n        <div className=\"right\">\r\n          <p>{props.username}</p>{\" \"}\r\n          <button onClick={props.onSignOut}>Sign Out</button>\r\n        </div>\r\n      )}\r\n      {props.username === \"\" && (\r\n        <div className=\"right\">\r\n          <SignInForm onSignIn={props.onSignIn} onSignUp={props.onSignUp} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import \"../css/ExpenseDate.css\";\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props) {\r\n  //Extract date from props\r\n  var month = getTrueMonth(props.date.getUTCMonth());\r\n  var day = props.date.getUTCDate();\r\n  var year = props.date.getFullYear();\r\n\r\n  var maxDays = numDays(month);\r\n\r\n  const monthHandler = (event) => {\r\n    //props.onGetYear(event.target.value);\r\n    maxDays = numDays(getTrueMonth(event.target.value));\r\n    console.log(maxDays);\r\n    console.log(event.target.value);\r\n    month=(event.target.value)\r\n  };\r\n\r\n  const yearHandler = (event) => {\r\n    //props.onGetYear(event.target.value);\r\n  };\r\n\r\n  const dayHandler = (event) => {\r\n    //props.onGetYear(event.target.value);\r\n    //check selected month\r\n  };\r\n\r\n  if (props.removing) {\r\n     \r\n    // console.log(theDays);\r\n    // console.log([...theDays]);\r\n    return (\r\n      <div className=\"expense-date\">\r\n        <select value={month} onChange={monthHandler}>\r\n          <option value=\"0\">January</option>\r\n          <option value=\"1\">February</option>\r\n          <option value=\"2\">March</option>\r\n          <option value=\"3\">April</option>\r\n          <option value=\"4\">May</option>\r\n          <option value=\"5\">June</option>\r\n          <option value=\"6\">July</option>\r\n          <option value=\"7\">August</option>\r\n          <option value=\"8\">September</option>\r\n          <option value=\"9\">October</option>\r\n          <option value=\"10\">November</option>\r\n          <option value=\"11\">December</option>\r\n        </select>\r\n        <select value={year} onChange={yearHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          value={day}\r\n          min=\"1\"\r\n          step=\"1\"\r\n          max={maxDays}\r\n          onChange={dayHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    //return date component\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst monthObj = {\r\n  \"January\": 31,\r\n  \"February\": 28,\r\n  \"March\": 31,\r\n  \"April\": 30,\r\n  \"May\": 31,\r\n  \"June\": 30,\r\n  \"July\": 31,\r\n  \"August\": 31,\r\n  \"September\": 30,\r\n  \"October\": 31,\r\n  \"November\": 30,\r\n  \"December\": 31,\r\n};\r\n\r\n//My own function because date objects are weird\r\nconst getTrueMonth = (month) => {\r\n  return Object.keys(monthObj)[month];\r\n};\r\n\r\nconst numDays = (month) => {\r\n  return monthObj[month];\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense or ExpenseItem\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(props.editing ? props.title : \"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(props.editing ? props.amount : \"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n  \r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(props.editing ? props.date : \"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    let itemID = -1;\r\n\r\n    if(props.editing){\r\n      itemID = props.itemID\r\n    }\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      id: itemID,\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //validate here if requires don't work\r\n\r\n    if(props.editing){\r\n      props.onCancel();\r\n    } \r\n    \r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    // or send to Expense item -> expensesList -> expenses to update item if editing\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  var heading = \"New Expense\";\r\n  var submitBtnText = \"Add\";\r\n  if(props.editing){\r\n    heading = \"\";\r\n    submitBtnText = \"Save\";\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>{heading}</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          required={true}\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n          required={true}\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n          required={true}\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button id=\"cancelBtn\" type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">{submitBtnText}</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpenseForm from \"../NewExpense/ExpenseForm\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  //calls function in expenses that removes\r\n  const removeHandler = () => {\r\n    props.onRemoveItem(props.id);\r\n  };\r\n\r\n  const showFormHandler = () => {\r\n    //if editing is in process, click edit to cancel out\r\n    if (showForm) {\r\n      setShowForm(false);\r\n    } else {\r\n      setShowForm(true);\r\n    }\r\n  };\r\n\r\n  if (props.editing) {\r\n    return (\r\n      <li>\r\n        <Card className=\"expense-item\">\r\n          <button className=\"removeBtn\" onClick={removeHandler}>\r\n            X\r\n          </button>\r\n          <button className=\"editBtn\" onClick={showFormHandler}>\r\n            edit\r\n          </button>\r\n          <ExpenseDate date={props.date} />\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n          </div>\r\n        </Card>\r\n        {showForm && (\r\n          <ExpenseForm\r\n            itemID={props.id}\r\n            date={props.date}\r\n            title={props.title}\r\n            amount={props.amount}\r\n            editing={props.editing}\r\n            onStoreExpense={props.onStoreExpense}\r\n            onCancel={showFormHandler}\r\n          />\r\n        )}\r\n      </li>\r\n    );\r\n  } else {\r\n    return (\r\n      <li>\r\n        <Card className=\"expense-item\">\r\n          <ExpenseDate date={props.date} />\r\n          <div className=\"expense-item__description\">\r\n            <h2>{props.title}</h2>\r\n            <div className=\"expense-item__price\">${props.amount}</div>\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  //sort expenses in ascending order\r\n  props.items.sort((a, b) => a.date - b.date);\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => ( <ExpenseItem\r\n          key={expense.id}\r\n          id={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          editing={props.editing}\r\n          onRemoveItem={props.onRemoveItem}\r\n          onStoreExpense={props.onStoreExpense}\r\n        /> ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import firebase from 'firebase';\r\n//import { initializeApp } from \"firebase/app\";\r\n  \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB7602g76FM5d_ajJm-h8lz_xmST3B0zVM\",\r\n    authDomain: \"exp-track-bdba3.firebaseapp.com\",\r\n    databaseURL: \"https://exp-track-bdba3-default-rtdb.firebaseio.com\",\r\n    projectId: \"exp-track-bdba3\",\r\n    storageBucket: \"exp-track-bdba3.appspot.com\",\r\n    messagingSenderId: \"337970307805\",\r\n    appId: \"1:337970307805:web:4289cd54f487468601b134\"\r\n  };\r\n    \r\nfirebase.initializeApp(firebaseConfig);\r\nvar database = firebase.database();\r\n\r\n  \r\nexport default database;","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\nimport database from \"../../firebase\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  //passed from App, pass to ExpensesList\r\n  const isEditing = props.editing;\r\n\r\n  const removeItemHandler = (itemID) => {\r\n    //do removal here\r\n    const removeExpense = async (userID, itemID) => {\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .remove()\r\n        .then(() => {\r\n          console.log(\"remove successful\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    //add call to props.onRemoveExpense to refresh list\r\n    removeExpense(props.userID, itemID).then(() => {\r\n      props.onRemoveExpense(itemID);\r\n    });\r\n  };\r\n\r\n  //push edit here\r\n  const editExpenseHandler = (enteredExpense) => {\r\n\r\n    //add new expense here\r\n    const pushChangedItem = async (enteredExpense, userID) => {\r\n      //set new fields\r\n      database\r\n        .ref(`expenses/${userID}/${enteredExpense.id}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${enteredExpense.id}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getUTCMonth(),\r\n          day: enteredExpense.date.getUTCDate(),\r\n          year: enteredExpense.date.getUTCFullYear(),\r\n        })\r\n        .catch(alert);\r\n    }; //end pushChangedItem\r\n\r\n    //call pushChangedItem and refresh page\r\n    pushChangedItem(enteredExpense, props.userID)\r\n      .then(() => {\r\n        props.onRefreshExpenses(enteredExpense);\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart expenses={currentYearExpenses} />\r\n      <ExpensesList\r\n        onStoreExpense={editExpenseHandler}\r\n        onRemoveItem={removeItemHandler}\r\n        editing={isEditing}\r\n        items={currentYearExpenses}\r\n        year={year}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\nimport database from \"../../firebase\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  let newItemID = null;\r\n\r\n  //database insertion\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    // Push Function\r\n    const pushNewExpense = async (enteredExpense, userID) => {\r\n      let itemID = 0;\r\n\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      // if no items under this user, leave itemID at 0\r\n      if (!responseData[userID]) {\r\n        //do nothing\r\n      } else {\r\n        // 'auto-increment'\r\n        itemID = Math.max(...Object.keys(responseData[userID])) + 1;\r\n      }\r\n\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}`)\r\n        .set({\r\n          name: enteredExpense.title,\r\n          price: enteredExpense.amount,\r\n        })\r\n        .catch(alert);\r\n\r\n      //set date\r\n      database\r\n        .ref(`expenses/${userID}/${itemID}/date`)\r\n        .set({\r\n          month: enteredExpense.date.getUTCMonth(),\r\n          day: enteredExpense.date.getUTCDate(),\r\n          year: enteredExpense.date.getUTCFullYear(),\r\n        })\r\n        .catch(alert);\r\n\r\n      newItemID = itemID;\r\n    }; //endPushNewItem\r\n\r\n    //waits for the push to go through successfully before refreshing list\r\n    pushNewExpense(enteredExpense, props.userID)\r\n      .then(() => {\r\n        setIsAdding(false);\r\n\r\n        const expense = {\r\n          ...enteredExpense,\r\n          id: newItemID,\r\n        };\r\n\r\n        //send to App.js for page refresh\r\n        props.onGetExpense(expense);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setEditHandler = () => {\r\n    setIsEditing(true);\r\n    props.onIsEditing(true);\r\n  };\r\n\r\n  const stopEditHandler = () => {\r\n    setIsEditing(false);\r\n    props.onIsEditing(false);\r\n  };\r\n\r\n  return (\r\n     <div className=\"new-expense\"> \r\n      {!isAdding && !isEditing && (\r\n        <div>\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n          <button onClick={setEditHandler}>Edit</button>{\" \"}\r\n        </div>\r\n      )}\r\n      {isAdding && !isEditing && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isEditing && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>Which expense(s) would you like to edit?</h3>{\" \"}\r\n          <button onClick={stopEditHandler}>Done</button>{\" \"}\r\n        </div>\r\n      )}\r\n     </div> \r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nimport database from \"./firebase\";\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  const [userNumber, setUserNumber] = useState();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [userPass, setUserPass] = useState(\"\");\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // persistent data upon page refresh\r\n  //\r\n  // var getInitialUser = () => {\r\n  //   var prevUser = localStorage.getItem('prevUser') || \"\";\r\n  //   var prevPass = localStorage.getItem('prevPass') || \"\";\r\n  //   return {\r\n  //     prevUser: prevUser,\r\n  //     prevPass: prevPass\r\n  //   };\r\n  // };\r\n\r\n  // var setUser = (userName, userPass) => {\r\n  //   localStorage.setItem('prevUser',userName);\r\n  //   localStorage.setItem('prevPass', userPass);\r\n  //   setUserName(userName);\r\n  //   setUserPass(userPass);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      setIsLoading(true);\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      const loadedExpenses = [];\r\n\r\n      for (const key in responseData[userNumber]) {\r\n        if (responseData[userNumber][key]) {\r\n          loadedExpenses.push({\r\n            id: key,\r\n            title: responseData[userNumber][key].name,\r\n            amount: responseData[userNumber][key].price,\r\n            date: new Date(\r\n              responseData[userNumber][key].date.year,\r\n              responseData[userNumber][key].date.month,\r\n              responseData[userNumber][key].date.day\r\n            ),\r\n          }); //push\r\n        }\r\n      } //for loop\r\n      setExpenses(loadedExpenses);\r\n      setIsLoading(false);\r\n    }; //fetchExpenses\r\n\r\n    fetchExpenses()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  }, [userNumber, userName]); //useEffect\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const removeExpenseHandler = (expenseID) => {\r\n    setExpenses((prevExpenses) => {\r\n      var filtered = prevExpenses.filter((expense) => {\r\n        return expense.id !== expenseID;\r\n      });\r\n      return [...filtered];\r\n    });\r\n  };\r\n\r\n  //combines removeExpenseHandler and addExpenseHandler to refresh internal list\r\n  //when changing an exspense but keeping the same id\r\n  const changeExpenseHandler = (expense) => {\r\n      removeExpenseHandler(expense.id);\r\n      addExpenseHandler(expense);\r\n  };\r\n\r\n  const signOutHandler = () => {\r\n    setUserNumber();\r\n    setUserName(\"\");\r\n    setUserPass(\"\");\r\n  };\r\n\r\n  const signInHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user exists\r\n      for (const key in responseData) {\r\n        if (responseData[key] === null) {\r\n          //do nothing - else it will fail to read\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserNumber(key);\r\n            return;\r\n          } //if\r\n        } //endif\r\n      } //end for\r\n\r\n      //user doesn't exist\r\n      alert(\"Invalid log in, please try again\");\r\n      setUserName(\"\");\r\n      setUserPass(\"\");\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  const signUpHandler = (enteredUser, enteredPass) => {\r\n    enteredUser = enteredUser.trim();\r\n    enteredPass = enteredPass.trim();\r\n    //validate\r\n    if (enteredUser === \"\" || enteredPass === \"\") {\r\n      alert(\"Please make sure you enter a username and password\");\r\n      return;\r\n    }\r\n\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    // Push Function\r\n    const pushNewUser = (enteredUser, enteredPass, newID) => {\r\n      database\r\n        .ref(`users/${newID}`)\r\n        .set({\r\n          user: enteredUser,\r\n          pass: enteredPass,\r\n        })\r\n        .catch(alert);\r\n    }; //endPushNewUser\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      //check to see if user already exists\r\n      for (const key in responseData) {\r\n        if (!responseData[key]) {\r\n          //do nothing\r\n        } else {\r\n          if (\r\n            responseData[key].user === enteredUser &&\r\n            responseData[key].pass === enteredPass\r\n          ) {\r\n            setUserName(\"\");\r\n            setUserPass(\"\");\r\n            alert(\"Try signing in, instead.\");\r\n            return;\r\n          } //if\r\n        } //if\r\n      } //for\r\n\r\n      //if user does not exist\r\n      const newID = Math.max(...Object.keys(responseData)) + 1; //auto increment\r\n\r\n      setUserNumber(newID);\r\n\r\n      //push new user\r\n      pushNewUser(enteredUser, enteredPass, newID);\r\n    };\r\n\r\n    fetchUsers()\r\n      .then()\r\n      .catch((error) => {\r\n        setIsLoading(false);\r\n        setHttpError(error.message);\r\n      });\r\n  };\r\n\r\n  //passed from NewExpense, pass to Expenses\r\n  const isEditingHandler = (editing) => {\r\n    if (editing) {\r\n      setIsEditing(true);\r\n    } else {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        username={userName}\r\n        onSignOut={signOutHandler}\r\n        onSignIn={signInHandler}\r\n        onSignUp={signUpHandler}\r\n      />\r\n      {userName !== \"\" && (\r\n        <NewExpense\r\n          onIsEditing={isEditingHandler}\r\n          userID={userNumber}\r\n          onGetExpense={addExpenseHandler}\r\n        />\r\n      )}\r\n      <Expenses\r\n        onRemoveExpense={removeExpenseHandler}\r\n        userID={userNumber}\r\n        editing={isEditing}\r\n        onRefreshExpenses={changeExpenseHandler}\r\n        items={expenses}\r\n      />\r\n      {userName === \"\" && (\r\n        <p style={{ color: \"black\", textAlign: \"center\" }}>\r\n          Please sign in to find expenses\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n} //app\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}