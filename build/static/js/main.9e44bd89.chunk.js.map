{"version":3,"sources":["components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","components/expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Header","className","ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","Filter","value","selected","onChange","event","onGetYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setSelectedYear","currentYearExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","newExpenseData","Date","trim","alert","onStoreExpense","placeholder","type","min","step","onClick","onCancel","NewExpense","isAdding","setIsAdding","isRemoving","setIsRemoving","enteredExpense","random","onGetExpense","db","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e44bd89.chunk.js","sourcesContent":["import \"../css/Header.css\";\r\n\r\n//Header component for entire page\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h2>Expense Tracker!</h2>\r\n      <div className=\"right\">\r\n        <button>Login</button>\r\n        <button>Register</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/ExpenseDate.css';\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props){\r\n    \r\n    //Extract date from props\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return(\r\n\r\n    //return date component\r\n    <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expense-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart expenses={currentYearExpenses} />\r\n      <ExpensesList items={currentYearExpenses} year={year}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //checks if title is entered. If not, prevent submission.\r\n    if(newExpenseData.title.trim() === ''){\r\n      alert(\"Must enter a title for this expense\");\r\n      return false;\r\n    }\r\n\r\n    //TODO: Throw this into DB\r\n    //console.log(newExpenseData);\r\n\r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>New Expense</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    const expense = {\r\n      ...enteredExpense,\r\n      // Placeholder for now --> will not need this once db is connected\r\n      id: Math.random.toString(),\r\n    };\r\n    //send to App.js\r\n    props.onGetExpense(expense);\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setRemoveHandler = () => {\r\n    setIsRemoving(true);\r\n  };\r\n\r\n  const stopRemoveHandler = () => {\r\n    setIsRemoving(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isAdding && !isRemoving && (\r\n        <div>\r\n          {/* TODO: Add editing capabilities to remove */}\r\n          <button onClick={setRemoveHandler}>Remove Expense</button>{\" \"}\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n        </div>\r\n      )}\r\n      {isAdding && !isRemoving && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isRemoving && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>\r\n            Which expense would you like to remove?\r\n          </h3> <button onClick={stopRemoveHandler}>Cancel</button>{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\n\r\nconst db = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"React Udemy Course\",\r\n    amount: 94.12,\r\n    date: new Date(2022, 2, 1),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState(db);\r\n  const addExpenseHandler = expense => {\r\n    setExpenses(prevExpenses => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <Header />\r\n      <NewExpense onGetExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}