{"version":3,"sources":["components/UI/SignInForm.js","components/UI/favicon.ico","components/expenses/Header.js","components/expenses/ExpenseDate.js","components/UI/Card.js","components/expenses/ExpenseItem.js","components/expenses/ExpensesList.js","components/graphs/Filter.js","components/graphs/ChartBar.js","components/graphs/Chart.js","components/graphs/ExpensesChart.js","components/expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["SignInForm","props","useState","enteredUser","setEnteredUser","enteredPass","setEnteredPass","submitHandler","event","preventDefault","inOrUp","target","value","console","log","onSignIn","onSubmit","onChange","className","placeholder","type","onClick","Header","src","logoUrl","alt","style","width","color","lineHeight","padding","username","onSignOut","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","Filter","selected","onGetYear","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","maxVal","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","setSelectedYear","currentYearExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","newExpenseData","Date","trim","alert","onStoreExpense","min","step","onCancel","NewExpense","isAdding","setIsAdding","isRemoving","setIsRemoving","enteredExpense","random","onGetExpense","App","setExpenses","isLoading","setIsLoading","httpError","setHttpError","userNumber","setUserNumber","userName","setUserName","userPass","setUserPass","useEffect","fetchExpenses","a","fetch","response","ok","Error","json","key","responseData","loadedExpenses","push","name","price","then","catch","error","message","fetchUsers","user","pass","prevExpenses","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84bb6998.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst SignInForm = (props) => {\r\n\r\n    const [enteredUser, setEnteredUser] = useState(\"\");\r\n    const userChangeHandler = (event) => {\r\n        setEnteredUser(event.target.value);\r\n    };\r\n\r\n    const [enteredPass, setEnteredPass] = useState(\"\");\r\n    const passChangeHandler= (event) => {\r\n        setEnteredPass(event.target.value);\r\n    };\r\n\r\n     const submitHandler = (event) =>{\r\n         event.preventDefault();\r\n\r\n         let inOrUp = event.target.value;\r\n\r\n         //validate here\r\n\r\n         //sign in\r\n          if(inOrUp === \"in\"){\r\n              console.log(\"Signing in\");\r\n              props.onSignIn(enteredUser,enteredPass);\r\n          } \r\n        //  //sign up\r\n          else if (inOrUp === \"up\"){\r\n              console.log(\"Signing up\");\r\n              //props.signUp(enteredUser, enteredPass);\r\n          } else {\r\n              console.log(\"ERROR SIGNING IN OR UP\");\r\n             return;\r\n          }\r\n        \r\n     }\r\n\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        onChange={userChangeHandler}\r\n        value={enteredUser}\r\n        className=\"input\"\r\n        placeholder=\"username\"\r\n        type=\"text\"\r\n      />\r\n      <input\r\n        onChange={passChangeHandler}\r\n        value={enteredPass}\r\n        className=\"input\"\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n      />\r\n      <div>\r\n        <button value=\"in\" onClick={submitHandler} type=\"button\" >Login</button>\r\n        <button value=\"up\" onClick={submitHandler} type=\"button\" >Register</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignInForm;\r\n","export default __webpack_public_path__ + \"static/media/favicon.2f506ebe.ico\";","//import { useState } from \"react\";\r\n\r\nimport SignInForm from \"../UI/SignInForm\";\r\n\r\nimport \"../css/Header.css\";\r\nimport logoUrl from \"../UI/favicon.ico\";\r\n\r\n//Header component for entire page\r\n//possibly move fetching users and signing in/up into this component\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"left\">\r\n        <img src={logoUrl} alt=\"MC logo\" style={{ width: \"100px\" }} />\r\n        <h2 style={{ color: \"white\", lineHeight: \"50px\", padding: \"0px 20px\" }}>\r\n          Expense Tracker\r\n        </h2>\r\n      </div>\r\n      {props.username !== \"\" && (\r\n        <div className=\"right\">\r\n          <p>{props.username}</p>{\" \"}\r\n          <button onClick={props.onSignOut}>Sign Out</button>\r\n        </div>\r\n      )}\r\n      {props.username === \"\" && (\r\n        <div className=\"right\">\r\n          <SignInForm onSignIn={props.onSignIn} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import '../css/ExpenseDate.css';\r\n\r\n//Date card for each expense\r\nfunction ExpenseDate(props){\r\n    \r\n    //Extract date from props\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        \r\n    //return date component\r\n    <div className=\"expense-date\">\r\n          <div className=\"expense-date__month\">{month}</div>\r\n          <div className=\"expense-date__year\">{year}</div>\r\n          <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import '../css/Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import \"../css/ExpenseItem.css\";\r\nimport \"../css/Card.css\";\r\n\r\nimport ExpenseDate from \"./ExpenseDate.js\";\r\nimport Card from \"../UI/Card.js\";\r\n\r\n//Entire expense card component\r\nfunction ExpenseItem(props) {\r\n  //embbed date and return extracted expense from expenses props\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"../css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <h2 className=\"expenses-list__fallback\">\r\n        No expenses found for {props.year}\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"../css/Filter.css\";\r\n\r\n//pass filter data via props to expenses then store in state\r\nconst Filter = (props) => {\r\n  const filterHandler = (event) => {\r\n    props.onGetYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterHandler}>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n          <option value=\"2028\">2028</option>\r\n          <option value=\"2029\">2029</option>\r\n          <option value=\"2030\">2030</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import \"../css/ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"../css/Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  //returns new array with all dataPoint values as indices\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  //finds max of all 12 datapoint values\r\n  const maxVal = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={maxVal}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"./Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n  // init value\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  // sum up expenses for all months\r\n  for (const expense of props.expenses) {\r\n    const month = expense.date.getMonth(); //jan === 0\r\n    chartDataPoints[month].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport Card from \"../UI/Card.js\";\r\nimport Filter from \"../graphs/Filter\";\r\nimport ExpensesChart from \"../graphs/ExpensesChart\";\r\n\r\nimport \"../css/Expenses.css\";\r\n\r\nfunction Expenses(props) {\r\n  //State to manage the selected year from filter from filter props\r\n  const [year, setSelectedYear] = useState(\"2022\");\r\n  const getYearHandler = (selectedYear) => {\r\n    setSelectedYear(selectedYear);\r\n  };\r\n\r\n  // Use selected year to copy an array to display onto page\r\n  const currentYearExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  //return all current year expenses\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <Filter selected={year} onGetYear={getYearHandler} />\r\n      <ExpensesChart expenses={currentYearExpenses} />\r\n      <ExpensesList items={currentYearExpenses} year={year}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\n\r\nimport \"../css/ExpenseForm.css\";\r\n\r\n//getting props from NewExpense\r\nconst ExpenseForm = (props) => {\r\n  //Title event listener\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  //Amount event listener\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  //Date event listener\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  //Submit event handler\r\n  const submitHandler = (event) => {\r\n    //prevents HTTP request from server\r\n    event.preventDefault();\r\n\r\n    //create object with all data entered\r\n    const newExpenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    //checks if title is entered. If not, prevent submission.\r\n    if(newExpenseData.title.trim() === ''){\r\n      alert(\"Must enter a title for this expense\");\r\n      return false;\r\n    }\r\n\r\n    //TODO: Throw this into DB\r\n    //console.log(newExpenseData);\r\n\r\n    //Send to NewExpense by calling that prop function associated with expense form\r\n    props.onStoreExpense(newExpenseData);\r\n\r\n    //Reset form for new expense\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-title\">\r\n        <h2>New Expense</h2>\r\n      </div>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n          placeholder=\"Expense Name\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          ${\" \"}\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\".01\"\r\n            step=\".01\"\r\n            placeholder=\"0.00\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2020-01-01\"\r\n            max=\"2030-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        {/*  */}\r\n        <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nimport \"../css/NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n  const [isRemoving, setIsRemoving] = useState(false);\r\n\r\n  const storeExpenseHandler = (enteredExpense) => {\r\n    const expense = {\r\n      ...enteredExpense,\r\n      // Placeholder for now --> will not need this once db is connected\r\n      id: Math.random.toString(),\r\n    };\r\n    //send to App.js\r\n    props.onGetExpense(expense);\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setAddingHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const stopAddingHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const setRemoveHandler = () => {\r\n    setIsRemoving(true);\r\n  };\r\n\r\n  const stopRemoveHandler = () => {\r\n    setIsRemoving(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isAdding && !isRemoving && (\r\n        <div>\r\n          {/* TODO: Add editing capabilities to remove */}\r\n          <button onClick={setRemoveHandler}>Remove Expense</button>{\" \"}\r\n          <button onClick={setAddingHandler}>Add Expense</button>\r\n        </div>\r\n      )}\r\n      {isAdding && !isRemoving && (\r\n        <ExpenseForm\r\n          onStoreExpense={storeExpenseHandler}\r\n          onCancel={stopAddingHandler}\r\n        />\r\n      )}\r\n      {isRemoving && (\r\n        <div>\r\n          {\" \"}\r\n          <h3>\r\n            Which expense would you like to remove?\r\n          </h3> <button onClick={stopRemoveHandler}>Cancel</button>{\" \"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"./components/expenses/Header\";\r\nimport Expenses from \"./components/expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nfunction App() {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [httpError, setHttpError] = useState(false);\r\n\r\n  const [userNumber, setUserNumber] = useState();\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const [userPass,setUserPass] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchExpenses = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab expenses from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/expenses.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching expenses!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      const loadedExpenses = [];\r\n\r\n      for (const key in responseData[userNumber]) {\r\n        console.log(key);\r\n        loadedExpenses.push({\r\n          id: responseData[userNumber][key],\r\n          title: responseData[userNumber][key].name,\r\n          amount: responseData[userNumber][key].price,\r\n          date: new Date(\r\n            responseData[userNumber][key].date.year,\r\n            responseData[userNumber][key].date.month,\r\n            responseData[userNumber][key].date.day\r\n          )\r\n        }); //push\r\n      } //for loop\r\n\r\n      setExpenses(loadedExpenses);\r\n      setIsLoading(false);\r\n    };//fetchExpenses\r\n\r\n    fetchExpenses().then().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n\r\n  }, [userNumber, userName]);//useEffect\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <section>\r\n        <p>Loading...</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  if (httpError) {\r\n    return (\r\n      <section>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  const signOutHandler = () => {\r\n    setUserName(\"\");\r\n    setUserNumber();\r\n    setUserPass(\"\");\r\n  };\r\n\r\n  const signInHandler = (enteredUser, enteredPass) => {\r\n    console.log(enteredUser + \" \" + enteredPass);\r\n    setUserName(enteredUser);\r\n    setUserPass(enteredPass);\r\n\r\n    console.log(userName + \" \" + userPass);\r\n\r\n    const fetchUsers = async () => {\r\n      setIsLoading(true);\r\n\r\n      //Grab users from db\r\n      const response = await fetch(\r\n        \"https://exp-track-bdba3-default-rtdb.firebaseio.com/users.json\"\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong when fetching users!\");\r\n      }\r\n\r\n      //convert response to json format\r\n      const responseData = await response.json();\r\n\r\n      for(const key in responseData){\r\n        console.log(responseData[key].user + \" \" +responseData[key].pass);\r\n         if(responseData[key].user === enteredUser && responseData[key].pass === enteredPass){\r\n            setUserNumber(key);\r\n            return;\r\n         } else{\r\n           console.log(\"Sign in Failed\");\r\n           //return;\r\n         }\r\n      }\r\n    };\r\n\r\n    fetchUsers().then().catch((error) => {\r\n      setIsLoading(false);\r\n      setHttpError(error.message);\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header username={userName} onSignOut={signOutHandler} onSignIn={signInHandler}/>\r\n      <NewExpense onGetExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n      {userName === \"\" && <p style={{color: \"black\", textAlign: \"center\"}}>Please sign in to find expenses</p>}\r\n    </div>\r\n  );\r\n}//app\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}